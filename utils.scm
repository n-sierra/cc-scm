(define (map f l)
  (if (null? l)
    '()
    (cons (f (car l)) (map f (cdr l)))))

(define (call-cc-api table-name func-name . args)
  (define (scm/lua->lua obj)
    (cond ((lua-object? obj) obj)
          (#t (scm->lua obj))))
  (let* ((t (lua-gettable (lua-get-g) (scm->lua table-name)))
        (fn (scm->lua func-name))
        (a (map scm/lua->lua args))
        (func (lua-gettable t fn))
        (ret (apply lua-call (cons func a)))
        (first-ret (lua-gettable ret (scm->lua 1))))
    first-ret))
